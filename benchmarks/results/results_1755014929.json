{
  "agrama_benchmark_report": {
    "timestamp": 1755014929,
    "total_benchmarks": 19,
    "results": [
      {
        "name": "HNSW Build Performance",
        "category": "hnsw",
        "p50_latency": 1.124e3,
        "p99_latency": 1.124e3,
        "throughput_qps": 8.9e-1,
        "speedup_factor": 8.9e-4,
        "memory_used_mb": 2.7e-1,
        "passed_targets": false,
        "dataset_size": 1000,
        "iterations": 1
      },
      {
        "name": "HNSW Query vs Linear Scan",
        "category": "hnsw",
        "p50_latency": 5.912e0,
        "p99_latency": 8.627e0,
        "throughput_qps": 2.0e2,
        "speedup_factor": 5.9e-1,
        "memory_used_mb": 2.6e0,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "HNSW Memory Efficiency",
        "category": "hnsw",
        "p50_latency": 4.023e3,
        "p99_latency": 4.023e3,
        "throughput_qps": 2.5e-1,
        "speedup_factor": 1.0e2,
        "memory_used_mb": 5.6e-1,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 1
      },
      {
        "name": "HNSW Scaling Analysis",
        "category": "hnsw",
        "p50_latency": 3.633e0,
        "p99_latency": 1.501e1,
        "throughput_qps": 2.0e2,
        "speedup_factor": 5.3e-2,
        "memory_used_mb": 5.0e2,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "FRE vs Dijkstra Comparison",
        "category": "fre",
        "p50_latency": 6.772e-1,
        "p99_latency": 3.414e0,
        "throughput_qps": 1.1e3,
        "speedup_factor": 1.3e2,
        "memory_used_mb": 4.3e2,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 35
      },
      {
        "name": "FRE Scaling Analysis",
        "category": "fre",
        "p50_latency": 4.438e-1,
        "p99_latency": 1.554e0,
        "throughput_qps": 1.5e3,
        "speedup_factor": 1.1e0,
        "memory_used_mb": 2.0e2,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 31
      },
      {
        "name": "FRE Multi-Target Traversal",
        "category": "fre",
        "p50_latency": 1.027e1,
        "p99_latency": 1.602e1,
        "throughput_qps": 1.0e2,
        "speedup_factor": 1.5e1,
        "memory_used_mb": 1.5e2,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 50
      },
      {
        "name": "Hybrid Query Performance",
        "category": "database",
        "p50_latency": 2.658e1,
        "p99_latency": 2.922e1,
        "throughput_qps": 3.7e1,
        "speedup_factor": 2.5e1,
        "memory_used_mb": 3.0e1,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "Storage Compression Efficiency",
        "category": "database",
        "p50_latency": 5.209e-3,
        "p99_latency": 9.333e-3,
        "throughput_qps": 1.7e5,
        "speedup_factor": 7.5e-1,
        "memory_used_mb": 3.0e1,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 5000
      },
      {
        "name": "Database Scaling Analysis",
        "category": "database",
        "p50_latency": 5.125e-3,
        "p99_latency": 3.195e-2,
        "throughput_qps": 1.5e5,
        "speedup_factor": 1.0e1,
        "memory_used_mb": 6.0e-1,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 200
      },
      {
        "name": "MCP Tool Performance",
        "category": "mcp",
        "p50_latency": 1.787e-2,
        "p99_latency": 2.930e-2,
        "throughput_qps": 5.5e4,
        "speedup_factor": 1.0e1,
        "memory_used_mb": 5.0e1,
        "passed_targets": true,
        "dataset_size": 100,
        "iterations": 100
      },
      {
        "name": "Concurrent Agent Load",
        "category": "mcp",
        "p50_latency": 1.775e-2,
        "p99_latency": 5.443e-2,
        "throughput_qps": 2.2e4,
        "speedup_factor": 5.0e0,
        "memory_used_mb": 7.5e1,
        "passed_targets": true,
        "dataset_size": 500,
        "iterations": 500
      },
      {
        "name": "MCP Server Scaling",
        "category": "mcp",
        "p50_latency": 1.635e-2,
        "p99_latency": 2.443e-2,
        "throughput_qps": 2.7e4,
        "speedup_factor": 2.7e2,
        "memory_used_mb": 1.0e2,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 170
      },
      {
        "name": "primitive_store",
        "category": "mcp",
        "p50_latency": 1.799e-1,
        "p99_latency": 2.808e-1,
        "throughput_qps": 5.1e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_retrieve",
        "category": "mcp",
        "p50_latency": 2.656e-1,
        "p99_latency": 5.167e-1,
        "throughput_qps": 3.2e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_search",
        "category": "mcp",
        "p50_latency": 1.005e-1,
        "p99_latency": 1.274e-1,
        "throughput_qps": 7.9e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_link",
        "category": "mcp",
        "p50_latency": 1.444e-1,
        "p99_latency": 2.433e-1,
        "throughput_qps": 5.9e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_transform",
        "category": "mcp",
        "p50_latency": 1.289e-1,
        "p99_latency": 1.923e-1,
        "throughput_qps": 6.4e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_concurrent",
        "category": "mcp",
        "p50_latency": 1.923e-1,
        "p99_latency": 3.318e-1,
        "throughput_qps": 5.6e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 60
      }
    ]
  }
}
