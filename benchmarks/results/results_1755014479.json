{
  "agrama_benchmark_report": {
    "timestamp": 1755014479,
    "total_benchmarks": 19,
    "results": [
      {
        "name": "HNSW Build Performance",
        "category": "hnsw",
        "p50_latency": 1.162e3,
        "p99_latency": 1.162e3,
        "throughput_qps": 8.6e-1,
        "speedup_factor": 8.6e-4,
        "memory_used_mb": 2.7e-1,
        "passed_targets": false,
        "dataset_size": 1000,
        "iterations": 1
      },
      {
        "name": "HNSW Query vs Linear Scan",
        "category": "hnsw",
        "p50_latency": 4.316e0,
        "p99_latency": 1.276e1,
        "throughput_qps": 1.6e2,
        "speedup_factor": 4.5e-1,
        "memory_used_mb": 2.6e0,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "HNSW Memory Efficiency",
        "category": "hnsw",
        "p50_latency": 4.414e3,
        "p99_latency": 4.414e3,
        "throughput_qps": 2.3e-1,
        "speedup_factor": 1.0e2,
        "memory_used_mb": 5.6e-1,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 1
      },
      {
        "name": "HNSW Scaling Analysis",
        "category": "hnsw",
        "p50_latency": 3.819e0,
        "p99_latency": 7.858e0,
        "throughput_qps": 2.5e2,
        "speedup_factor": 6.5e-2,
        "memory_used_mb": 5.0e2,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "FRE vs Dijkstra Comparison",
        "category": "fre",
        "p50_latency": 8.376e-1,
        "p99_latency": 1.932e0,
        "throughput_qps": 1.0e3,
        "speedup_factor": 1.4e2,
        "memory_used_mb": 4.3e2,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 22
      },
      {
        "name": "FRE Scaling Analysis",
        "category": "fre",
        "p50_latency": 6.707e-1,
        "p99_latency": 1.770e0,
        "throughput_qps": 1.4e3,
        "speedup_factor": 1.1e0,
        "memory_used_mb": 2.0e2,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 28
      },
      {
        "name": "FRE Multi-Target Traversal",
        "category": "fre",
        "p50_latency": 1.130e1,
        "p99_latency": 1.818e1,
        "throughput_qps": 9.4e1,
        "speedup_factor": 1.5e1,
        "memory_used_mb": 1.5e2,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 50
      },
      {
        "name": "Hybrid Query Performance",
        "category": "database",
        "p50_latency": 2.984e1,
        "p99_latency": 3.336e1,
        "throughput_qps": 3.3e1,
        "speedup_factor": 2.5e1,
        "memory_used_mb": 3.0e1,
        "passed_targets": false,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "Storage Compression Efficiency",
        "category": "database",
        "p50_latency": 6.208e-3,
        "p99_latency": 1.129e-2,
        "throughput_qps": 1.5e5,
        "speedup_factor": 7.5e-1,
        "memory_used_mb": 3.0e1,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 5000
      },
      {
        "name": "Database Scaling Analysis",
        "category": "database",
        "p50_latency": 6.042e-3,
        "p99_latency": 4.091e-2,
        "throughput_qps": 1.3e5,
        "speedup_factor": 1.0e1,
        "memory_used_mb": 6.0e-1,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 200
      },
      {
        "name": "MCP Tool Performance",
        "category": "mcp",
        "p50_latency": 1.740e-2,
        "p99_latency": 2.802e-2,
        "throughput_qps": 5.7e4,
        "speedup_factor": 1.0e1,
        "memory_used_mb": 5.0e1,
        "passed_targets": true,
        "dataset_size": 100,
        "iterations": 100
      },
      {
        "name": "Concurrent Agent Load",
        "category": "mcp",
        "p50_latency": 2.400e-2,
        "p99_latency": 3.217e-2,
        "throughput_qps": 2.1e4,
        "speedup_factor": 5.0e0,
        "memory_used_mb": 7.5e1,
        "passed_targets": true,
        "dataset_size": 500,
        "iterations": 500
      },
      {
        "name": "MCP Server Scaling",
        "category": "mcp",
        "p50_latency": 1.892e-2,
        "p99_latency": 4.190e-2,
        "throughput_qps": 2.2e4,
        "speedup_factor": 2.2e2,
        "memory_used_mb": 1.0e2,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 170
      },
      {
        "name": "primitive_store",
        "category": "mcp",
        "p50_latency": 1.877e-1,
        "p99_latency": 2.419e-1,
        "throughput_qps": 4.9e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_retrieve",
        "category": "mcp",
        "p50_latency": 1.883e-1,
        "p99_latency": 3.148e-1,
        "throughput_qps": 4.9e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_search",
        "category": "mcp",
        "p50_latency": 7.027e-2,
        "p99_latency": 1.119e-1,
        "throughput_qps": 9.9e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_link",
        "category": "mcp",
        "p50_latency": 1.401e-1,
        "p99_latency": 1.748e-1,
        "throughput_qps": 5.2e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_transform",
        "category": "mcp",
        "p50_latency": 9.296e-2,
        "p99_latency": 1.422e-1,
        "throughput_qps": 8.2e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 100
      },
      {
        "name": "primitive_concurrent",
        "category": "mcp",
        "p50_latency": 1.588e-1,
        "p99_latency": 2.579e-1,
        "throughput_qps": 6.7e3,
        "speedup_factor": 1.0e0,
        "memory_used_mb": 0.0e0,
        "passed_targets": true,
        "dataset_size": 5000,
        "iterations": 60
      }
    ]
  }
}
